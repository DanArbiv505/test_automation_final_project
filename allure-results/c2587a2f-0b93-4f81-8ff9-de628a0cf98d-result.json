{"name": "Test01: Create calculation", "status": "broken", "statusDetails": {"message": "AttributeError: 'NoneType' object has no attribute 'to_capabilities'", "trace": "request = <SubRequest 'init_desktop_driver' for <Function test_create_task>>\n\n    @pytest.fixture(scope='class')\n    def init_desktop_driver(request):\n>       edriver = get_desktop_driver()\n\ntest_cases\\conftest.py:92: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_cases\\conftest.py:199: in get_desktop_driver\n    desktop_driver = appium.webdriver.Remote(\"http://127.0.0.1:4723\", dc)\n.venv\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:267: in __init__\n    super().__init__(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <[AttributeError(\"'WebDriver' object has no attribute 'session_id'\") raised in repr()] WebDriver object at 0x27dac945130>\ncommand_executor = <appium.webdriver.appium_connection.AppiumConnection object at 0x0000027DADBD7F80>\nkeep_alive = {'app': 'Microsoft.WindowsCalculator_8wekyb3d8bbwe!App', 'deviceName': 'WindowPC', 'platformName': 'Windows'}\nfile_detector = None, options = None\n\n    def __init__(\n        self,\n        command_executor: Union[str, RemoteConnection] = \"http://127.0.0.1:4444\",\n        keep_alive: bool = True,\n        file_detector: Optional[FileDetector] = None,\n        options: Optional[Union[BaseOptions, List[BaseOptions]]] = None,\n    ) -> None:\n        \"\"\"Create a new driver that will issue commands using the wire\n        protocol.\n    \n        :Args:\n         - command_executor - Either a string representing URL of the remote server or a custom\n             remote_connection.RemoteConnection object. Defaults to 'http://127.0.0.1:4444/wd/hub'.\n         - keep_alive - Whether to configure remote_connection.RemoteConnection to use\n             HTTP keep-alive. Defaults to True.\n         - file_detector - Pass custom file detector object during instantiation. If None,\n             then default LocalFileDetector() will be used.\n         - options - instance of a driver options.Options class\n        \"\"\"\n    \n        if isinstance(options, list):\n            capabilities = create_matches(options)\n            _ignore_local_proxy = False\n        else:\n>           capabilities = options.to_capabilities()\nE           AttributeError: 'NoneType' object has no attribute 'to_capabilities'\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:192: AttributeError"}, "description": "make calculation with a given string", "start": 1726497163704, "stop": 1726497163704, "uuid": "64cf3659-2b0a-4042-b327-867f0ad10449", "historyId": "aac22aacdad595afe9eafa75ac1e6d4c", "testCaseId": "aac22aacdad595afe9eafa75ac1e6d4c", "fullName": "test_cases.test_cases_desktop.TestCasesDesktop#test_create_task", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_desktop_driver')"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_cases_desktop"}, {"name": "subSuite", "value": "TestCasesDesktop"}, {"name": "host", "value": "DESKTOP-1SRCFM0"}, {"name": "thread", "value": "13744-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_cases_desktop"}]}